# syntax=docker/dockerfile:1

FROM rust:1.90-slim AS builder

WORKDIR /app

# Cache dependencies first
COPY Cargo.toml Cargo.lock ./
COPY notes_server/Cargo.toml notes_server/Cargo.toml

# Create a dummy main to cache deps for notes_server
RUN mkdir -p notes_server/src \
    && echo "fn main() { println!(\"build-placeholder\"); }" > notes_server/src/main.rs

# Build to warm the cache (ignore build failure if features differ later)
RUN cargo build --release -p notes_server || true

# Now copy the full workspace and build the real binary
COPY . .
RUN cargo build --release -p notes_server

############################################
# Runtime image: minimal Debian with CA certs #
############################################
FROM debian:bookworm-slim AS runtime

RUN apt-get update \
    && apt-get install -y --no-install-recommends ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && useradd -m -u 10001 appuser

WORKDIR /app

# Copy the compiled binary
COPY --from=builder /app/target/release/notes_server /usr/local/bin/notes-api

ENV RUST_LOG=info
EXPOSE 3000
USER appuser

CMD ["/usr/local/bin/notes-api"]


